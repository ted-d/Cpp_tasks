/*Объявите в программе структуру с именем типа THING со следующими полями:

    name - название предмета; строка максимальной длиной 50 символов;
    weight - вес предмета (тип unsigned int).

В функции main объявите массив things типа THING со следующими данными (предметами):

{"карандаш", 20}, {"зеркальце", 100}, {"зонт", 500}, {"рубашка", 300}, 
{"брюки", 1000}, {"бумага", 200}, {"молоток", 600}, {"пила", 400}, {"удочка", 1200},
{"расческа", 40}, {"котелок", 820}, {"палатка", 5240}, {"брезент", 2130}, {"спички", 10}

Здесь указано название и вес предмета в граммах.

Сергей собирается в поход и готов взвалить на свои хрупкие плечи максимальный вес в N кг (вводится с клавиатуры). 
Он решил класть в рюкзак предметы в порядке убывания их веса (сначала самые тяжелые, затем, все более легкие) так, 
чтобы их суммарный вес не превысил значения N кг. Все предметы даны в единственном экземпляре. Выведите в консоль названия предметов (в строчку через пробел), которые берет с собой Сергей.

P. S. 1 кг = 1000 грамм

Тесты: https://github.com/selfedu-rus/c-tests/tree/main/9.5.8

Sample Input:

2

Sample Output:

удочка молоток бумага

*/
#include <iostream>
using THING = struct{
    
    char name[50];
    unsigned int weight;

};
using std::cin;
using std::cout;
void sort(THING *ar){
    int len = 14;
    
   for(int i = 0;i<len;i++){
     for(int j = 0;j<len-i-1;j++){
         if(ar[j].weight<ar[j+1].weight){THING temp = ar[j];
                                  ar[j]=ar[j+1];
                                  ar[j+1]=temp;
                                  }
   }
   }
}
int main()
{ 
    THING things[]=
    {
        {"карандаш", 20}, {"зеркальце", 100}, {"зонт", 500}, {"рубашка", 300}, 
        {"брюки", 1000}, {"бумага", 200}, {"молоток", 600}, {"пила", 400}, {"удочка", 1200},
        {"расческа", 40}, {"котелок", 820}, {"палатка", 5240}, {"брезент", 2130}, {"спички", 10}
    };
     int n;
     cin>>n;
    n*=1000;
     sort(things);
    for(int i = 0; i <14 ; i++){
        if(n>=things[i].weight){n-=things[i].weight;
     cout<<things[i].name<<" "; }  
    }
 return 0;   
}
